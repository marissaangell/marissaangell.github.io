{"version":3,"file":"component---src-pages-coding-js-923f95d3d0d0d2cff64b.js","mappings":"6KAOA,SAASA,EAAiBC,GACzB,OAAOA,GACN,IAAK,MAAW,MAAO,0BACvB,IAAK,QACL,IAAK,aACL,IAAK,MAAS,MAAO,8BACrB,IAAK,SAAW,MAAO,gCACvB,IAAK,gBAAmB,MAAO,4BAC/B,IAAK,OACL,IAAK,SAAc,MAAO,gCAC1B,IAAK,KAAU,MAAO,4BACtB,QAAc,MAAO,4BAEtB,CAUD,IA0DA,EA1DqB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAE1BC,EAFiD,EAAlBC,YAGxBL,EAAiBE,EAAQI,UAAU,IACnCN,IAEZ,OACE,2BAASO,UAAW,qDAAuDH,GAC3E,uBAAKG,UAAU,yEAEb,uBAAKA,UAAU,wCACb,qBAAGA,UAAU,0CACVL,EAAQM,MAEX,uBAAKD,UAAU,+BACZL,EAAQO,cACPP,EAAQO,cAAcC,KAAI,SAACC,GAAD,OAC7B,qBAAGC,GAAID,EAAKR,IAAKU,KAAMF,EAAKR,IAAKW,IAAKH,EAAKR,IAAKI,UAAU,uBAvB5D,WAwBmBI,EAAKI,KAxBN,gBAAC,MAAD,CAAgBC,KAAM,KACxB,gBAAC,MAAD,CAAkBA,KAAM,KAqBT,IAKzB,mCAMN,uBAAKT,UAAU,UACf,gBAAC,KAAD,CAAMU,GAAE,aAAed,EAAOI,UAAU,SACtC,sBAAIA,UAAU,sDACXL,EAAQgB,OAEV,qBAAGX,UAAU,8BACVL,EAAQiB,eAKd,uBAAKZ,UAAU,yDACb,qBAAGA,UAAW,wEAA0EH,GACrFF,EAAQI,UAAU,IAErB,sBAAIC,UAAU,kBACXL,EAAQkB,KAAKV,KAAI,SAACW,GAAD,OACtB,sBAAIP,IAAKO,EAAKd,UAAU,qFAChBc,EAFc,OAa5B,EC3DD,EAvBiB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOjB,EAAkB,EAAlBA,YAC1B,OACE,2BACK,sBAAIE,UAAU,0GACXe,EAAMZ,KAAI,SAACa,GAAD,OACX,uBAAKhB,UAAU,gCACZgB,EAAMC,SACZ,uBAAKV,IAAKS,EAAMC,SAASZ,GAAIL,UAAU,gCACxC,gBAAC,EAAD,CACCL,QAASqB,EAAMC,SAASC,YACxBtB,IAAKoB,EAAMG,KACXrB,YAAaA,KAGb,KAVc,KAiBpB,C,qCCfD,IARgB,SAAC,GAAc,IAAZsB,EAAW,EAAXA,KACjB,OACE,0BAAQpB,UAAU,cACd,sBAAIA,UAAU,oCAAoCoB,GAGzD,C,6GCDKC,EAAY,oBAwDlB,UAtDmB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEpB,GAAkCC,EAAAA,EAAAA,WAAS,GAApCC,EAAP,KAAkBC,EAAlB,KAGD,OACC,gBAAC,IAAD,CAAQJ,UAAWA,EAAWK,WAAW,WACxC,gBAAC,IAAD,CAASN,KAAMC,IAGZ,uBAAKrB,UAAU,2BACb,wBAAMA,UAAU,+DAAhB,gBAEA,yBAAOA,UAAU,oDACf,yBAAO2B,KAAK,WAAWC,MAAM,GAAGvB,GAAG,iBAAiBL,UAAU,eAAe6B,SAXpE,kBAAMJ,GAAcD,EAApB,EAWwFM,QAASN,IAC1G,uBAAKxB,UAAU,+VAKtB,2BACK,uBAAKA,UAAU,YACnB,gBAAC,IAAD,CAAUe,MAAOO,EAAKS,QAAQC,MAAOlC,YAAa0B,KAKrD,EA6BM,IAAMS,EAAO,kBAAM,6BAAQZ,EAAd,C","sources":["webpack://portfolio/./src/components/gradientCard.js","webpack://portfolio/./src/components/cardGrid.js","webpack://portfolio/./src/components/heading.js","webpack://portfolio/./src/pages/coding.js"],"sourcesContent":["//Source: https://www.hyperui.dev/components/marketing/cards\r\n\r\nimport * as React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { MarkGithubIcon, LinkExternalIcon } from '@primer/octicons-react'\r\n\r\nfunction getGradientColor(language){\r\n\tswitch(language){\r\n\t\tcase 'C++': \t\t \treturn 'from-red-400 to-red-600'\r\n\t\tcase 'React': \treturn 'from-green-400 to-green-600'\r\n\t\tcase 'JavaScript': \treturn 'from-green-400 to-green-600'\r\n\t\tcase 'Vue': \t\treturn 'from-green-400 to-green-600'\r\n\t\tcase 'Python': \treturn 'from-yellow-400 to-yellow-600'\r\n\t\tcase 'Unreal Engine': \t\treturn 'from-blue-400 to-blue-600'\r\n\t\tcase 'Java': \t\t \treturn 'from-orange-400 to-orange-600'\r\n\t\tcase 'Kotlin': \t\t \treturn 'from-orange-400 to-orange-600'\r\n\t\tcase 'C#': \t\t \treturn 'from-pink-500 to-pink-700'\r\n\t\tdefault: \t\t\t \treturn 'from-gray-400 to-gray-500'\r\n\t}\r\n}\r\n\r\nfunction getExtLinkIcon(linkTo){\r\n\tswitch(linkTo){\r\n\t\tcase 'Github': \treturn <MarkGithubIcon size={16}/>\r\n\t\tdefault: \t\t\t \treturn <LinkExternalIcon size={16}/>\r\n\t}\r\n}\r\n\r\n\r\nconst GradientCard = ({ details, url, useGradient }) => {\r\n\r\n\tconst gradientColor = (useGradient) \r\n\t\t\t\t\t\t\t\t\t\t\t\t? getGradientColor(details.languages[0])\r\n\t\t\t\t\t\t\t\t\t\t\t\t: getGradientColor()\r\n\r\n  return (\r\n    <article className={\"p-1 h-full shadow-xl rounded-2xl bg-gradient-to-r \" + gradientColor}>\r\n\t\t  <div className=\"flex flex-col justify-between h-full p-4 bg-neutral sm:p-5 rounded-xl\">\r\n\t\t    \r\n\t\t    <div className=\"flex flex-row justify-between w-full\">\r\n\t\t      <p className=\"text-xs font-medium text-gray-500 mb-2\">\r\n\t\t        {details.date}\r\n\t\t      </p>\r\n\t\t      <div className=\"text-xs flex flex-row gap-2\">\r\n\t\t\t      { details.externalLinks\r\n\t\t\t      \t? details.externalLinks.map((link) => (\r\n\t\t\t\t\t\t\t\t\t<a id={link.url} href={link.url} key={link.url} className=\"hover:text-gray-200\">\r\n\t\t\t\t\t\t\t\t\t\t{getExtLinkIcon(link.icon)}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t        \t\t))\r\n\t        \t\t: <></> \r\n        \t\t}\r\n\t\t      </div>\r\n\t      </div>\r\n\r\n\r\n\t      <div className=\"h-full\">\r\n\t\t    \t<Link to={`/projects/${url}`} className=\"group\">\r\n\t\t      \t<h5 className=\"text-xl font-bold text-white group-hover:underline\">\r\n\t\t        \t{details.title}\r\n\t      \t\t</h5>\r\n\t\t        <p className=\"mt-2 text-sm text-gray-400\">\r\n\t\t          {details.description}\r\n\t\t        </p>\r\n\t\t      </Link>\r\n\t      </div>\r\n\r\n\t      <div className=\"flex items-center align-self-end justify-between mt-4\">\r\n\t        <p className={\"text-lg font-semibold text-transparent bg-clip-text bg-gradient-to-r \" + gradientColor}>\r\n\t          {details.languages[0]}\r\n\t        </p>\r\n\t        <ul className=\"flex space-x-1\">\r\n\t        \t{ details.tags.map((tag) => (\r\n\t\t\t\t\t\t\t<li key={tag} className=\"inline-block rounded-full text-gray-100 text-xs font-normal px-2 py-1 bg-gray-700\">\r\n\t\t            {tag}\r\n\t\t          </li>\r\n\t\t        )) }\r\n\t        </ul>\r\n\t      </div>\r\n\r\n\t\t    \r\n\t\t  </div>\r\n\t\t</article>\r\n\r\n  )\r\n}\r\n\r\nexport default GradientCard","import * as React from \"react\"\r\n\r\nimport GradientCard from './gradientCard'\r\n\r\nconst CardGrid = ({ cards, useGradient }) => {\r\n\treturn (\r\n\t  <div>\r\n        <dl className=\"space-y-4 mt-4 md:mt-6 md:space-y-0 md:grid md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-8 items-stretch\">\r\n\t        { cards.map((entry) => (\r\n\t        \t<div className=\"relative self-stretch h-full\">\r\n\t        \t\t{ entry.childMdx \r\n\t\t\t\t\t? <div key={entry.childMdx.id} className=\"relative self-stretch h-full\">\r\n\t\t\t\t\t\t<GradientCard \r\n\t\t\t\t\t\t\tdetails={entry.childMdx.frontmatter} \r\n\t\t\t\t\t\t\turl={entry.name} \r\n\t\t\t\t\t\t\tuseGradient={useGradient} \r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t        ))}\r\n     \t</dl>\r\n      </div>\r\n\t)\r\n}\r\n\r\nexport default CardGrid\r\n","import * as React from 'react'\r\n\r\nconst Heading = ({ text }) => {\r\n  return (\r\n    <header className=\"w-fit py-6\">\r\n        <h1 className=\"text-4xl font-bold text-gray-200\">{text}</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Heading\r\n\r\n//       <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n//         <div className=\"px-4 py-6 sm:px-0\">\r\n//           <div className=\"border-4 border-dashed border-gray-200 rounded-lg h-96\" />\r\n","import React, { useState } from \"react\"\r\nimport { graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Heading from '../components/heading'\r\nimport CardGrid from '../components/cardGrid'\r\n\r\nconst pageTitle = 'Software Projects'\r\n\r\nconst CodingPage = ({ data }) => {\r\n\r\n  const [isToggled, setIsToggled] = useState(true);\r\n  const onToggle = () => setIsToggled(!isToggled);\r\n\r\n\treturn (\r\n\t\t<Layout pageTitle={pageTitle} navCurrent=\"/coding\">\r\n\t\t\t<Heading text={pageTitle} />\r\n\r\n      {/* Color Toggle */}\r\n      <div className=\"flex justify-end -mt-10\">\r\n        <span className=\"mr-3 text-sm font-semibold text-gray-900 dark:text-gray-300\">Color Coding</span>\r\n\r\n        <label className=\"inline-flex relative items-center cursor-pointer\">\r\n          <input type=\"checkbox\" value=\"\" id=\"checked-toggle\" className=\"sr-only peer\" onChange={onToggle} checked={isToggled} />\r\n          <div className=\"w-11 h-6 bg-gray-200 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n        </label>\r\n      </div>\r\n\r\n      {/* Card Grid */}\r\n\t\t\t<div>\r\n        <div className=\"divider\" />\r\n\t\t\t\t<CardGrid cards={data.allFile.nodes} useGradient={isToggled} />\r\n\t\t\t</div>\r\n\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport const query = graphql`\r\n  query AllProjectQuery {\r\n    allFile(filter: {sourceInstanceName: {eq: \"coding\"}, extension: {eq: \"mdx\"}}, sort: {fields: childrenMdx___frontmatter___date, order: DESC}) {\r\n      nodes {\r\n        sourceInstanceName\r\n        name\r\n        childMdx {\r\n          frontmatter {\r\n            date(formatString: \"YYYY\")\r\n            title\r\n            tags\r\n            description\r\n            languages\r\n            externalLinks {\r\n              desc\r\n              icon\r\n              url\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default CodingPage\r\n\r\nexport const Head = () => <title>{pageTitle}</title>"],"names":["getGradientColor","language","details","url","gradientColor","useGradient","languages","className","date","externalLinks","map","link","id","href","key","icon","size","to","title","description","tags","tag","cards","entry","childMdx","frontmatter","name","text","pageTitle","data","useState","isToggled","setIsToggled","navCurrent","type","value","onChange","checked","allFile","nodes","Head"],"sourceRoot":""}