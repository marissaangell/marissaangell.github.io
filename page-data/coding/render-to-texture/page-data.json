{"componentChunkName":"component---src-pages-mdx-parent-file-source-instance-name-mdx-parent-file-name-js","path":"/coding/render-to-texture/","result":{"data":{"mdx":{"id":"b4c1a652-b190-5679-a57f-adc4e166c991","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Render to Texture\",\n  \"date\": \"2023-02-21\",\n  \"category\": \"coding\",\n  \"pageLayout\": \"media\",\n  \"description\": \"A small OpenGL app that renders a lit scene containing an .obj mesh to a texture.\",\n  \"languages\": [\"C++\", \"OpenGL\"],\n  \"tags\": [\"computer-graphics\"],\n  \"factoids\": [{\n    \"heading\": \"Tools & Languages\",\n    \"body\": \"C++, OpenGL\"\n  }, {\n    \"heading\": \"Project Type\",\n    \"body\": \"Individual Coursework (Interactive Computer Graphics)\"\n  }]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ImgCarousel = makeShortcode(\"ImgCarousel\");\nvar ProseWrapper = makeShortcode(\"ProseWrapper\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ImgCarousel, {\n    images: [RTTPic1, RTTPic2, RTTPic3, RTTPic4, RTTPic5, RTTPic6],\n    mdxType: \"ImgCarousel\"\n  }), mdx(ProseWrapper, {\n    mdxType: \"ProseWrapper\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"tags":["computer-graphics"],"languages":["C++","OpenGL"],"date":"2023-02-21","title":"Render to Texture","description":"A small OpenGL app that renders a lit scene containing an .obj mesh to a texture.","longDescription":null,"category":"coding","pageLayout":"media","factoids":[{"heading":"Tools & Languages","body":"C++, OpenGL"},{"heading":"Project Type","body":"Individual Coursework (Interactive Computer Graphics)"}],"featuredLinks":null,"projectMedia":null,"itchEmbed":null},"parent":{"sourceInstanceName":"coding","name":"render-to-texture"}}},"pageContext":{"id":"b4c1a652-b190-5679-a57f-adc4e166c991","parent__sourceInstanceName":"coding","parent__name":"render-to-texture","__params":{"parent__sourceInstanceName":"coding","parent__name":"render-to-texture"}}},"staticQueryHashes":["3159585216"]}